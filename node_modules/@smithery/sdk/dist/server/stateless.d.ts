import express from "express";
import type { z } from "zod";
import type { Server } from "@modelcontextprotocol/sdk/server/index.js";
/**
 * Arguments when we create a new instance of your server
 */
export interface CreateServerArg<T = Record<string, unknown>> {
    config: T;
}
export type CreateServerFn<T = Record<string, unknown>> = (arg: CreateServerArg<T>) => Server;
export interface CreateStatelessServerOptions<T> {
    schema?: z.ZodSchema<T>;
    app?: express.Application;
}
/**
 * Creates a stateless server for handling MCP requests
 * In stateless mode, each request creates a new server and transport instance
 * @param createMcpServer Function to create an MCP server
 * @param options Optional configuration including Zod schema for validation
 * @returns Express app
 */
export declare function createStatelessServer<T = Record<string, unknown>>(createMcpServer: CreateServerFn<T>, options?: CreateStatelessServerOptions<T>): {
    app: express.Application;
};
